# Lorg/webrtc/EglBase;->create(Lorg/webrtc/EglBase$Context; [I)Lorg/webrtc/EglBase; [access_flags=public static]
#
# Parameters:
# - local registers: v0...v0
# - v1:org.webrtc.EglBase$Context
# - v2:int[]
#
# - return:org.webrtc.EglBase

create-BB@0x0 : [ create-BB@0xc create-BB@0x28 ]
	0       (00000000) invoke-static        Lorg/webrtc/EglBase14;->isEGL14Supported()Z
	1       (00000006) move-result          v0
	2       (00000008) if-eqz               v0, +10

create-BB@0xc : [ create-BB@0x10 create-BB@0x18 ]
	3       (0000000c) if-eqz               v1, +6

create-BB@0x10 : [ create-BB@0x18 create-BB@0x28 ]
	4       (00000010) instance-of          v0, v1, Lorg/webrtc/EglBase14$Context;
	5       (00000014) if-eqz               v0, +a

create-BB@0x18 : [ create-BB@0x26 ]
	6       (00000018) new-instance         v0, Lorg/webrtc/EglBase14;
	7       (0000001c) check-cast           v1, Lorg/webrtc/EglBase14$Context;
	8       (00000020) invoke-direct        v0, v1, v2, Lorg/webrtc/EglBase14;-><init>(Lorg/webrtc/EglBase14$Context; [I)V

create-BB@0x26 : 
	9       (00000026) return-object        v0

create-BB@0x28 : [ create-BB@0x26 ]
	10      (00000028) new-instance         v0, Lorg/webrtc/EglBase10;
	11      (0000002c) check-cast           v1, Lorg/webrtc/EglBase10$Context;
	12      (00000030) invoke-direct        v0, v1, v2, Lorg/webrtc/EglBase10;-><init>(Lorg/webrtc/EglBase10$Context; [I)V
	13      (00000036) goto                 -8

