# Lorg/webrtc/SurfaceTextureHelper;->textureToYUV(Ljava/nio/ByteBuffer; I I I I [F)V [access_flags=public]
#
# Parameters:
# - local registers: v0...v9
# - v10:java.nio.ByteBuffer
# - v11:int
# - v12:int
# - v13:int
# - v14:int
# - v15:float[]
#
# - return:void

textureToYUV-BB@0x0 : [ textureToYUV-BB@0x8 textureToYUV-BB@0x18 ]
	0       (00000000) iget                 v0, v9, Lorg/webrtc/SurfaceTextureHelper;->oesTextureId I
	1       (00000004) if-eq                v14, v0, +a

textureToYUV-BB@0x8 : 
	2       (00000008) new-instance         v0, Ljava/lang/IllegalStateException;
	3       (0000000c) const-string         v1, 'textureToByteBuffer called with unexpected textureId'
	4       (00000010) invoke-direct        v0, v1, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V
	5       (00000016) throw                v0

textureToYUV-BB@0x18 : 
	6       (00000018) iget-object          v8, v9, Lorg/webrtc/SurfaceTextureHelper;->handler Landroid/os/Handler;
	7       (0000001c) new-instance         v0, Lorg/webrtc/SurfaceTextureHelper$7;
	8       (00000020) move-object          v1, v9
	9       (00000022) move-object          v2, v10
	10      (00000024) move                 v3, v11
	11      (00000026) move                 v4, v12
	12      (00000028) move                 v5, v13
	13      (0000002a) move                 v6, v14
	14      (0000002c) move-object          v7, v15
	15      (0000002e) invoke-direct/range  v0 ... v7, Lorg/webrtc/SurfaceTextureHelper$7;-><init>(Lorg/webrtc/SurfaceTextureHelper; Ljava/nio/ByteBuffer; I I I I [F)V
	16      (00000034) invoke-static        v8, v0, Lorg/webrtc/ThreadUtils;->invokeAtFrontUninterruptibly(Landroid/os/Handler; Ljava/lang/Runnable;)V
	17      (0000003a) return-void          

