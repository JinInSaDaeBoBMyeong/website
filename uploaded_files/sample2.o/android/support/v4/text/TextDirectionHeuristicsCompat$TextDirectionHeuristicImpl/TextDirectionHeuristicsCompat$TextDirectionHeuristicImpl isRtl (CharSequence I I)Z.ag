# Landroid/support/v4/text/TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;->isRtl(Ljava/lang/CharSequence; I I)Z [access_flags=public]
#
# Parameters:
# - local registers: v0...v1
# - v2:java.lang.CharSequence
# - v3:int
# - v4:int
#
# - return:boolean

isRtl-BB@0x0 : [ isRtl-BB@0x4 isRtl-BB@0x1a ]
	0       (00000000) if-eqz               v2, +d

isRtl-BB@0x4 : [ isRtl-BB@0x8 isRtl-BB@0x1a ]
	1       (00000004) if-ltz               v3, +b

isRtl-BB@0x8 : [ isRtl-BB@0xc isRtl-BB@0x1a ]
	2       (00000008) if-ltz               v4, +9

isRtl-BB@0xc : [ isRtl-BB@0x1a isRtl-BB@0x26 ]
	3       (0000000c) invoke-interface     v2, Ljava/lang/CharSequence;->length()I
	4       (00000012) move-result          v0
	5       (00000014) sub-int/2addr        v0, v4
	6       (00000016) if-ge                v0, v3, +8

isRtl-BB@0x1a : 
	7       (0000001a) new-instance         v0, Ljava/lang/IllegalArgumentException;
	8       (0000001e) invoke-direct        v0, Ljava/lang/IllegalArgumentException;-><init>()V
	9       (00000024) throw                v0

isRtl-BB@0x26 : [ isRtl-BB@0x2e isRtl-BB@0x38 ]
	10      (00000026) iget-object          v0, v1, Landroid/support/v4/text/TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;->mAlgorithm Landroid/support/v4/text/TextDirectionHeuristicsCompat$TextDirectionAlgorithm;
	11      (0000002a) if-nez               v0, +7

isRtl-BB@0x2e : [ isRtl-BB@0x36 ]
	12      (0000002e) invoke-virtual       v1, Landroid/support/v4/text/TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;->defaultIsRtl()Z
	13      (00000034) move-result          v0

isRtl-BB@0x36 : 
	14      (00000036) return               v0

isRtl-BB@0x38 : [ isRtl-BB@0x36 ]
	15      (00000038) invoke-direct        v1, v2, v3, v4, Landroid/support/v4/text/TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;->doCheck(Ljava/lang/CharSequence; I I)Z
	16      (0000003e) move-result          v0
	17      (00000040) goto                 -5

