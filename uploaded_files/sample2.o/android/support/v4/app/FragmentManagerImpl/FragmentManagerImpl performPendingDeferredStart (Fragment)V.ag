# Landroid/support/v4/app/FragmentManagerImpl;->performPendingDeferredStart(Landroid/support/v4/app/Fragment;)V [access_flags=public]
#
# Parameters:
# - local registers: v0...v6
# - v7:android.support.v4.app.Fragment
#
# - return:void

performPendingDeferredStart-BB@0x0 : [ performPendingDeferredStart-BB@0xa performPendingDeferredStart-BB@0x18 ]
	0       (00000000) const/4              v3, 0
	1       (00000002) iget-boolean         v0, v7, Landroid/support/v4/app/Fragment;->mDeferStart Z
	2       (00000006) if-eqz               v0, +9

performPendingDeferredStart-BB@0xa : [ performPendingDeferredStart-BB@0x12 performPendingDeferredStart-BB@0x1a ]
	3       (0000000a) iget-boolean         v0, v6, Landroid/support/v4/app/FragmentManagerImpl;->mExecutingActions Z
	4       (0000000e) if-eqz               v0, +6

performPendingDeferredStart-BB@0x12 : [ performPendingDeferredStart-BB@0x18 ]
	5       (00000012) const/4              v0, 1
	6       (00000014) iput-boolean         v0, v6, Landroid/support/v4/app/FragmentManagerImpl;->mHavePendingDeferredStart Z

performPendingDeferredStart-BB@0x18 : 
	7       (00000018) return-void          

performPendingDeferredStart-BB@0x1a : [ performPendingDeferredStart-BB@0x18 ]
	8       (0000001a) iput-boolean         v3, v7, Landroid/support/v4/app/Fragment;->mDeferStart Z
	9       (0000001e) iget                 v2, v6, Landroid/support/v4/app/FragmentManagerImpl;->mCurState I
	10      (00000022) move-object          v0, v6
	11      (00000024) move-object          v1, v7
	12      (00000026) move                 v4, v3
	13      (00000028) move                 v5, v3
	14      (0000002a) invoke-virtual/range v0 ... v5, Landroid/support/v4/app/FragmentManagerImpl;->moveToState(Landroid/support/v4/app/Fragment; I I I Z)V
	15      (00000030) goto                 -c

